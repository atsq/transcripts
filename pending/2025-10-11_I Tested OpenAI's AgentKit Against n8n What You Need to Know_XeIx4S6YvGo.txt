OpenAI just killed Naden. Or did they
really? Because they just dropped their
agent kit. We may be seeing that
narrative right now online. But today, I
am here to actually compare Agent Kit
and Naden and talk about the future of
both of these agent builders. As always,
we're not just going to be talking about
it. I'm going to be comparing both of
these platforms across different
categories so we can highlight each of
the platform strengths and weaknesses.
So, to start off with a quick overview
of each of these tools, we've got Agent
Kit, which just dropped October 6th of
2025. It's OpenAI's agent builder that
looks like this. It's very very simple
to use and it's very drag and drop low
code visual interface. Here's a quote
from Sam Alman saying, "Agent Builder is
like Canva for building agents. It's a
fast visual way to design the logic,
steps, ideas." I'm assuming you guys
already know what Naden is, but if you
don't, it was released October 8th,
2019, so about 6 years ago. But in the
last year, it really started to take
off. As you can see by this Google
Trends chart right here, Naden's in the
blue. And then we have other AI
automation platforms like Make and
Zapier down below. And you can see it
just hockey stickked right past them.
You can plug AI into your own data and
there's over 500 integrations which
makes it really easy to connect to your
tools and this is what NN looks like. So
like I said today we're going to be
comparing agent kit with NN across
different categories. To answer the
question is Agent Kit going to kill
NAND? And in short my answer is no. When
we started hearing rumors about this
dropping everyone immediately ran to
it's going to kill NAND? I don't think
it's going to at all. And I also want to
be really clear that I don't think
OpenAI's goal was to compete with NAND.
I think that Agent Kit is built for
teams and consumers that are really
integrated into OpenAI's environment and
they're not looking to build super super
custom robust AI automations and
autonomous systems. They're looking to
build some really quick and easy
workflows that's going to save
themselves time and maybe even some
conversational agents internally for
their team. Now, NN of course was built
to be completely everything. It's super
powerful. It was honestly built for
developers. It's a little bit more
technical, but because of that, you have
the ability to truly do anything. Like
when we saw Google drop their Opal,
which was like very similar visual
interface. People said, "Oh, is this
going to kill any?" No. Real quick, why
should you trust my opinion on this? I
run an AI automation community where I'm
teaching over 150,000 people how to
build AI solutions to implement into
businesses. And all of that is being
done with NAN. Our AI company, True
Horizon, consults and implements custom
AI solutions. And pretty much all of
that is NADN. And we've been working
with enterprise companies as well. So
the categories that we're going to look
at today are ease of use, triggers,
agent tools, model support, UI chat
components, and deployment and control.
So starting off with the first category,
we have ease of use. So if I'm like a
complete beginner and I want to test out
agent kit, which is OpenAI agent
builder, I would come here and I would
search OpenAI agent builder. I could
look at the release notes or I could go
here to the OpenAI platform, click on
agent builder, and then I could open up
my agent builder right here. This is
pretty much available to everyone. You
just have to have an OpenAI API account.
You can see here we have the ability to
create a workflow. And what's key here
in my mind is it says to build a chat
agent. Now a chat agent or a
conversational agent in my mind is very
different to like a fully autonomous
tools agent because the chat agent is
going to be looking up some information
for you, helping you get your questions
answered, but not as much like take
action on your behalf autonomously. So
anyways, we have some templates down
here that we could look at, but I'm just
going to go ahead and create a new flow
so we can get familiarized with this
environment. What you'll notice here is
that we have a start and I actually
cannot delete this start because every
workflow needs a trigger. You can see
that once you have this start, you have
to drag the circle to say where does
this go next just like end where you'd
connect your nodes together. And we have
an AI agent right here which we're able
to name. We're able to give it
instructions. We can include chat
history. We can choose the model, the
reasoning, we can give it tools. And we
have an output format section where we
can do text, JSON or widget, which we'll
talk a little bit about later. But what
I'm immediately seeing off the bat is
this whole interface is a lot less
intimidating than nitn. I can easily
choose my model, give it instructions,
and I can also on the lefthand side see
everything I have available to me, which
is an agent. I can end it. I can do a
file search. I can do guard rails, MCP
servers. I've only got five logic and
data operations to choose from. If,
else, while, human approval, transform,
or set state. And this is a lot less
intimidating to me as a complete
beginner with no coding background to
get into compared to when I jump into
something like niten create a new
workflow and then when I open up this
first step I have tons of different
things in here. Let's say I want to pull
in an AI agent and I can click on that
agent right here. I have this input
where I'm looking at this variable. I
have all these options down here to
choose from and I might not know exactly
what they mean. You can also see I have
an error already because I didn't
connect to chat model. I also have the
option to add memory and all these
different tools. And this just initially
is going to be a lot more intimidating
than hopping into the agent builder by
OpenAI. One of the first things that I
wanted to do when I built my first agent
ever is I wanted to connect it to the
internet so it could look up things for
me. And with OpenAI's agent builder, all
I have to do is click on this plus for
tool and I can just do web search. And
that's basically going to search the way
that you can do web search when you're
in chatbt. You can also specify to only
look through certain websites and you
can also do location-based searches. So
just like that, I already have an AI
agent that can search the web and I can
also connect a chat model right here
without ever having to go and get any
API key. But in any if we wanted to
search the web, we'd have to give it a
tool. We'd have to choose from all of
these hundreds of different tools. We
may even need to set up our own custom
HTTP request and we would also have to
go get an API key for both the web
search and also the chat model, which is
just a lot more intimidating and
definitely raises the barrier to entry a
little bit compared to the agent
builder. So if I was to think about the
time that it would take for a complete
beginner to build one automation system
in OpenAI agent builder or the exact
same system in Naden, they would do it
much quicker and feel a lot less
overwhelmed in agent builder hands down.
Which is why for this first category,
agent kit gets an 8 out of 10. Naden
gets a 6 out of 10 and that is our new
total for the scores right now. Anyways,
let's move on to the next category which
is triggers. So remember earlier when we
were looking at this workflow section
and it says to build a chat agent. Now
when we look at the triggers, you can
kind of see why I am drawn to that or
not drawn to that fixated on that
because when you have your AI agent and
you have just this start option, there's
no other triggers available as you can
see which means that if we want to
communicate with this agent, the only
way we can actually trigger it is by
talking to it as you can see over here
in this preview. So if I want to test my
workflow, I can chat with it right here
and I can say search the web for NDN. We
can see visually that the agent right
now is using its web search function and
it's using its reasoning to search the
web for Naden. And that's really cool
because we spun up a web agent in matter
of seconds. But the issue here is I
don't see a great way to have web- based
events or scheduled triggers. Even if we
go up here to publish our AI agent,
let's just say we're going to call this
test web agent or text, I guess. And
when we publish this, it said right
there that it could be used in API
calls. I don't know if you guys caught
that, but what we're able to do is
either embed it as chatkit, which I will
talk about a little bit later, or we
could trigger this agent from an agent's
SDK, and it gives us the TypeScript or
the Python. So, what this tells me is
you technically could be able to trigger
this agent from uh an HTTP request or
from like an action in an app, but it's
not super intuitive or easy. It would be
really nice if OpenAI had scheduled
triggers or app events, stuff like that.
For instance, if you wanted to make an
open AAI agent to respond to your
emails, it would not be as easy as an
NAN because there's not like a Gmail
trigger on new message received trigger.
Whereas an NAN and you want to look at
your triggers, we could go to Gmail
right here and then we could see our
trigger is on new message received. So
we could easily have this agent go off
whenever we get a new Gmail. We also
have eight triggers in Slack. So on any
event, on bot mentioned, on file shared,
on new user, on a reaction added,
there's so many triggers that are
already natively baked into Nitn. We we
could of course have a web hook. So our
CRM could send data, we could have
Google Drive, we could have Twilio, we
can have pretty much anything. And in my
mind, the systems that are most valuable
when it comes to automation or AI
automation are the ones that the human
doesn't have to manually trigger. So
real quick example, a lot of businesses
reach out to us and they want to
integrate this personal assistant that I
had built. However, when we're trying to
actually communicate what would be the
best quick win to show them ROI really
fast, I never would recommend a personal
assistant. What I would recommend is
something that nurtures leads or
responds to leads quicker and stuff like
that because those type of systems help
grow the business and as the business
grows, those systems will get used more
and more. So, the throughput of the
system increases as the business grows,
which is just a scalable compoundable
ROI of the system. And it's not the
exact same with something like a
personal assistant because as the
business grows, it doesn't necessarily
mean that you're going to be using the
system more. So, in a nutshell, the most
powerful automations in my mind are ones
that run in the background when you even
know they're running. And because in
OpenAI's agent builder, we're kind of
limited on our triggers and being able
to schedule or have things go off in the
background. That's why I think any
definitely takes the cake here, coming
in at a 10 out of 10 and agent kit comes
at a 5 out of 10, which makes our new
score agent kit 13 and 16. All right,
moving on to agent tools, which is
really, really important because this is
what gives our agents the ability to
actually do things on our behalf. So,
we're back in our OpenAI agent builder
flow where we already gave our agent the
tool of web search, which was super
easy. No API key, really quick. I love
it. But now, when we go to add more
tools, you can see we only have a few
options. We have a client tool, which is
the ability to send data back to our
chat kit widget, which I will say that
is very cool. We can do MCP servers. So,
this is nice because you can connect
really easily to Gmail, Google Calendar,
Drive, Outlook. You can see these other
integrations right here, but there
aren't a ton here and they all have to
be MCP servers. You also could connect
to a different MCP server, which is cool
because there's, you know, tons in
Zapier. You can even connect to your own
custom end workflow and there's also
lots of other MCP servers that you could
connect to. And it's not as powerful as
how many APIs there are out there and
how many you could connect to with a
standard HTTP request. And in Nitn when
you come in here to connect tools you
can first of all also call on an NIDN
workflow which is super powerful and
then of course you have all of these
native integrations which is just
there's literally hundreds and hundreds
I think it's over 500 native
integrations that they have. So almost
any tool that you could think of you can
connect to with your AI agents here. And
if Naden doesn't have a native
integration, you can use this HTTP
request tool which is the most dynamic
and powerful tool in the world because
you can literally talk to any service
that has API documentation. And like I
mentioned with being able to call on
subworkflows, you can see here with the
ultimate personal assistant, for
example, it has an email agent. And if I
open up this email agent workflow, what
we see is a completely separate AI agent
that I built in Naden. And this agent in
itself has tons of other tools that it
can use in here. So you can build some
really really powerful orchestration
agent systems in NN. And all of these
are super modular and reusable because
now if I ever need an email agent, I can
just hook it up to this one. Even if
this agent is hooked up to like 100, it
doesn't matter. And yes, I did say that
you can hook up an OpenAI agent to an NN
agent, which does work, but you would
need to use this, which is the MCP
server trigger right here. And you would
be able to hook up this MCP server to a
bunch of different tools. So, you do
have the ability to talk to some custom
agents and stuff in these workflows down
here. It's just not as powerful as the
sub workflow as a tool option. So, for
agent tools, agent kit's going to come
in once again at a five. N's going to
come in at a 10. And our new total is
agent kit 18. N 26. So, let's move into
the next category, which is model
support. So, this one's pretty simple
and it's pretty easy because in OpenAI,
of course, you only have access to the
OpenAI models. And that's really not a
huge problem. As you can see, we have
tons and tons of models. You've got
heavy ones, fast ones, reasoning ones.
It's really not that big of a deal. And
you also in here can change the
reasoning effort really quickly. You can
change the verbosity, the summary, the
tool choice, all of this kind of stuff.
And once again, because it's all baked
into your OpenAI environment, you
already have everything right here.
You're also able to easily toggle on or
off if you want chat history to be
included or not. But in NN, what you can
do is choose your own chat model. So,
Anthropic, Azure, Bedrock, Coher, any of
these. Or you could also just go to open
router. And now you can choose pretty
much any of the hundreds of models that
are on Open Router. So you have way more
freedom here. And honestly, I think that
is very important because I don't always
only just use OpenAI's models. I do a
lot of the times, but for certain use
cases, I really want to use a Google or
I really want to use anthropic. And when
you choose any of these models, you
still have the option to change things
like your top P, your frequency, your
sampling temperature, all that kind of
stuff as well in NAND, which is why
NIAND comes in at a 10 out of 10 because
you can also use local models because
you can host NAND locally. And agent
kit's going to come in at a 6 out of 10
here, pushing our new total to agent kit
24 and N36. Now, this one's really
interesting. We are moving on to UI chat
components. So earlier in this video, I
alluded a few times to something called
Chatkit, which is like Agent Kit's
built-in tool to help you create like
website widgets and embed your OpenAI
agents really easily and really cleanly
onto your own website. Users can add
slick branded chat interfaces to their
apps without extra coding. Everything
looks polished and works with OpenAI
agents out of the box. And that is
actually a really big value ad for
OpenAI's agent kit. And it end on the
other hand focuses way more on the
backend workflows. So, it has no fancy
or easy way to embed chat interfaces by
default. You would typically need to
embed your agent into some sort of front
end if you want it to actually look
nice. Here's a quick example of all of
the different widgets you could create
and you could have your OpenAI agents
power these different widgets. And
that's where this output thing comes
into play. If I change this to widget,
we could basically set up the type of
widget we want and what little things
that our agents could change based on
its output in that widget. And so when I
click on create widget here, you can see
that we could either describe and start
to mock up what we want it to look like.
You can go to the gallery and see these
are types of widgets and this is what
you could have your agent actually
interface with and change. And so that's
why I think this is really cool for
their front end. But with Naden, you
have the option with the chat message
trigger to open up a chat interface and
embed it, but it just looks like this.
It's really hard to customize and it
just doesn't look great. So here's a
cool quote from HubSpot. Chatkit saved
us weeks of custom front-end work,
making it easy for us to prototype
enhancements to the UI of HubSpot's
breeze assistant and agents. With the
custom response widget, our agent can
deliver interactive guided solutions
instead of static replies. So, it is
very cool, which is why agent kit is
going to get a 9 out of 10 and Naden's
going to get a 5 out of 10, moving the
total to agent kit 33 and end 41.
Hopefully, I've done all this math
right. Let me know if I have not. And
now to talk about our final section, we
have deployment and control, which is
obviously a big deal, especially if you
want to do this for your own business or
help other businesses implement AI
automations. One of the biggest reasons
in my mind that blew up besides being
easy to use and visual is because it was
open- source. I think they prefer to
actually use the term code available or
something like that, but meaning you can
host it in the cloud, you can host it on
your own private server, you can host it
locally on your own computer, and you
can have full control over all of the
data, especially if you're locally
hosting your LLM as well. You know where
everything's going. Agent Kit, on the
other hand, is deployed and managed
entirely in OpenAI's cloud, so users
don't have to worry about the technical
setup, which is good. Everything's
hosted for them, but also OpenAI has
full control over where the data and
agents are living. And once again, if
your company and your workflows are
already completely baked into OpenAI's
environment, then that's probably not a
huge deal for you, and you could easily
spin up some really helpful automations
with OpenAI's Agent Kit. But Naden, once
again, you can have full control,
although sometimes that does require a
little bit more technical setup or
expertise at the beginning. So for
deployment and control, agent kit gets a
7 out of 10. Naden gets a 10 out of 10,
moving the total to a final agent kit 40
and NADN 51, which means that NADN is
our winner today. But once again, this
is very relative. If I was approaching
this from a standpoint of a different
type of consumer, maybe not as much of a
developer standpoint, I would probably
enjoy Agent Kit more. So anyways,
there's a few more miscellaneous things
I wanted to hit on real quick about the
two platforms. So like pricing,
evaluation tools, and community support.
This is still not a finished product by
Agent Kit, and they're capable of doing
a ton of cool stuff here. So their
pricing is not fully finalized right
now. You can just basically access it
for free, but I believe you'd be paying
for the usage of the AI chat models.
Agent Kit also has some really cool
evaluation tools, but there's also some
aspects of the evaluation that I don't
love. So, let me show you what I mean by
that real quick. Okay, so this is one of
OpenAI's templates. And what I want to
do real quick is just preview it and
just do a quick conversation. So, I
first of all say hello. You can see
what's going on over here. The triage
agent is going to figure out what to
output. And then it basically sends me
back some information and it says to get
started, could you share the following?
You can see I responded to that. You can
see we saw the path that this workflow
took. And now the launch helper agent is
basically creating us a guide on how to
launch this. So regardless of the
output, what I don't love here is I
can't see how the data moved through
each of these steps. So if I close out
of this preview and I click on, you
know, that we want to see what happened
in this condition, it's kind of hard to
see what data just passed through. And
if I click on evaluate, this is where we
could actually kind of, you know, see
those logs, but it's a little bit
confusing. Like you can see the timing
of each of these steps. You can see what
happened. If I click on this triage
agent, we can see that it used GPT5. We
can see the system prompts. We can see
the input right here. And we can see the
reasoning and the actions, but it's just
a lot harder to see the data moving
through the nodes in the way that NIDAN
makes it a lot easier to do because in
NIN with this workflow, you can see
everything's green. You can see how many
items are moving through. When you click
into a node, you can see the input on
the left, you can see the configuration
in the middle, and you can see the
output on the right. So, it's really
easy to follow the data trail and
understand exactly where something went
wrong and what you need to change. But
in my mind, in this OpenAI agent kit
environment, it's just hard for me to
understand what's coming in and what's
going out because you can see here we
have a variable which is input output
parsed blah blah blah. But I don't
exactly know where that variable is
coming from. I would have to come into
here and I would have to try to figure
out, okay, output format, we have JSON,
we have this response schema, and is
this where it's outputting the
information? So anyways, not trying to
get too technical here, but I really
like in Nitn how you can see the outputs
of the nodes. You can see data flow. You
can see the input configuration and the
output. And you can also click on
executions and you can go see all of the
different runs very clearly what
happened in a much more visual interface
than going into the agent builder,
looking at the evaluations, and looking
at all of the logs and having to kind of
look through it like this. It's just a
bit more confusing, which surprises me
because it's so much easier to use if I
was a complete beginner. But they also
do have some really cool evaluation
capabilities with data sets, trace
grading, and prompt optimization. As you
can see here, there's different ways
that you can grade your runs and then
like pass prompts through to see if
they're passing or failing. You can
optimize your prompts, and of course,
you can trace grade. The last thing I
wanted to hit on here was community
support. OpenAI obviously just released
their agent kit yesterday, and we all
know what that company is capable of.
They're it's just really cool what
they're working on. So, I imagine we're
going to see Agent Kit continue to
evolve and evolve. But because Eniden's
been around for 6 years and has blown up
in the past year, there's so much
content, there's so many courses,
there's so many free templates, like
5,000 plus templates, whereas in Open
AI's Agent Kit, you're a little bit more
on your own right now. Anyways, overall,
we have Agent Kit at 40, we have Naden
at 51. And I wanted to talk about real
quick when you would choose each of
these tools. So, I would choose OpenAI
agent kit if I wanted to prioritize
rapid deployment with minimal technical
complexity. If I wanted a polished chat
user interface or some widgets that
could be dynamic, if I'm looking to do
some really quick and easy comprehensive
agent evaluation and testing. And of
course, if I have everything that I know
about my business already in OpenAI's
ecosystem, it's going to make it really
easy to plug in these custom workflows.
Now, Nen, they definitely were targeting
more of the developers. Flexibility
across multiple AI providers, complex
workflow automation beyond simple chat,
cost control through self-hosting,
complete data and infrastructure
control. You obviously have the ability
to connect to literally anything,
trigger your workflows by literally
anything, and do any type of data
manipulation or transformation that you
need. But making this video was really
fun for me because I think a lot of
people tend to get caught up on tools.
You know, what's going to drop? What's
going to be relevant? What do I learn?
Am I taking a huge risk or gamble? The
answer is no. as long as you're
approaching it from the mindset of I
want to learn when AI is valuable, when
it's not, how to save time, and how to
solve a core problem that is actually
facing the business. Because if you're
trying to work with businesses, they're
probably not going to choose you because
of your specific tool. They're going to
choose you because you know how to
deliver them results that save them
money, save them time, and increase
their focus. So, real quick, the mindset
should be become tool agnostic. Solve
what the problem is at its core. Doesn't
really matter how you get there. So, if
I apologize for the ramble there, but
hopefully you guys understand where I'm
coming from. That's the type of stuff I
love to talk about in this space because
there is a lot of hype. And if you're
looking to connect with a ton of other
people who enjoy talking about that kind
of stuff as well, then definitely check
out my plus community. The link for this
is down in the description. We just hit
3,000 members, which is super exciting,
but it's full of people that are
building with NAND every day or
different platform. It's a community
full of AI problem solvers. Tons of
people in here are building businesses
with AI or using AI to help their own
businesses. It's a really cool space to
be. And we also have three full courses
right now. Agent zero which is the
foundations of AI automation for
beginners. We have 10 hours to 10
seconds where we dive into naden and
identifying how to save time with
automations. And then we have a new
course for our annual members called one
person AI automation agency where we lay
the foundation for building a scalable
AI automation business. I also run one
live call a week in here which have been
really fun lately. Been getting a lot of
cool questions and cool discussions. So
I'd love to see you guys in this
community. But that's going to do it for
today's video. If you enjoyed you
learned something new, please give it a
like. It definitely helps me out a ton.
And as always, I appreciate you guys
making it to the end of the video. I'll
see you on the next one.