What if you can wake up every single
morning to an email digest that is
perfectly dialed in and tailored to
exactly the information and news that
you want to hear about? Doesn't matter
what niche you're in or if it's a super
obscure topic that nobody else cares
about. You can actually create an AI
agent that will send you an email digest
every single morning. And that is just
scratching the surface of what you can
do with a tool like N8N. By the end of
this video, you'll be able to build an
automation that collects news from all
over the internet, no matter how obscure
this source is, and sends you that daily
digest. However, this is just scratching
the surface of what an automation tool
like N8N can do. You can literally
automate anything. You can have N8N turn
on your lights when you pull into your
garage at home. Fire Ship built an
automation where when his wife texts him
with some sort of mad text, he
automatically sends her flowers and
tweets an apology for her. I mean,
really, what you can do with a tool like
Naden is endless. But in this video, I
want to make a fairly simple demo to
really show you the possibilities and
how to build one of these workflows. But
the idea is really to get your wheels
turning on what else you can build with
this because quite honestly, the
opportunities are pretty endless. Now,
when it comes to using NAND, there's a
few ways that you can do it. First, you
can go over to naden.io,
which is the official NADN website, and
you can use it to a limited degree for
free, but beyond that, you're looking at
a minimum of 24 bucks a month to use
NADN's direct website. However, NADN is
openly available. You can actually find
it over on GitHub with all of the source
code available. So, you could actually
install this locally as well and run it
completely for free if you want. In
fact, if I open up my computer's
terminal and just simply type npx nadn
and hit enter, it asks me if I want to
install N8N locally. I could hit Y.
It'll go through a bunch of installation
steps. And then it tells me to press O
to open in browser. So, let's go ahead
and press O. It's opened in a browser
tab here. You can see because it's on
local host. And I can go ahead and
create an account, which I'm going to do
real quick. Just like that, I can start
creating workflows. We can see here's
our NADN automation builder. And our
goal is to get a final automation that
looks like this. There are, however,
some downsides to running this locally.
One, it can be complex and overwhelming
if you're not comfortable using the
terminal to set something up like this.
But more importantly, if you're running
it local, that local server needs to be
running for you to run any of the
automations inside of NADN. So, if your
internet is ever down or your computer
is turned off, you're not going to be
able to run your N8 installation or
let's say you're traveling. I'm in hotel
rooms a lot going to various conferences
and keynotes and things. If one of my
automations isn't working properly, I
have no way of accessing it on the road
because it's only installed on my local
computer. So, my recommendation isn't
actually using the NAN website. It's not
installing it locally. It's installing
it on a third-party Linux server that's
hosted in the cloud that you can access
anytime. And for that, I actually
recommend Hostinger, which is the
sponsor of today's video. So, we're
going to build our email newsletter
automation here in a moment, but first,
let's create a Hostinger virtual private
server to run this on so it constantly
runs even if my computer's turned off.
If you head on over to
hostinger.com/mattnatn,
you'll land on a special N8N focused
page for signing up to a Hostinger
account. I recommend the KVM2 plan,
which starts as low as $6.99 a month.
And you can actually get it cheaper.
Let's go ahead and choose the plan here.
And if I come over here to have coupon
code, and I enter the coupon code Matt
Wolf, click apply, it'll get even
cheaper. Pick the location that has the
best latency for you. And then when we
get to this page where it asks you to
choose an operating system. Well, we
want this to be purpose-built for NAND.
So I'm going to click on application.
We'll click on show more. And then if we
scroll down to developer tools, you'll
see NADN right here. Even has a star
next to it to show that this is the
popular one that you want. So we'll
click that. We'll pick a password. It'll
go through a quick setup process. And
then we're in the back end of Hostinger.
Now all I have to do is click on manage
app. And we get a similar page where it
asks us to create our account for
logging in. So, I'll go ahead and do
that real quick. And we are in NADN now
to build whatever we want. Now, the
first thing I recommend doing before you
actually go and create your own
workflow, which we will do in a second,
is to check out all of the templates
that are available. There's almost 6,000
workflow automation templates available
for NADN that people have already just
built the automations. You just need to
go and swap out the details with your
specific details. There's pre-built
automations to generate AI viral videos
with V3 and automatically upload them to
Tik Tok. You could analyze a landing
page with OpenAI and get optimization
tips. There's nutrition trackers,
automated economic calendars, stock
trading signals with Gemini 2.5 and so
much more. I mean, again, almost 6,000
templates, but let's go ahead and build
one from scratch and really show off
what NAND can do. So inside of our NAD
dashboard, we'll go ahead and start from
scratch. And we have our node builder
here where we can start building. And
you need your first step to be a
trigger. What's going to make this
automation actually start. So we'll add
our first step. And we'll set this on a
schedule because we're building a daily
newsletter. So we want it to send every
morning. Trigger interval we'll leave as
days. Days between trigger we'll use at
1. Trigger at hour. Let's have it go at
7 a.m. That way, it's waiting for me
when I finally sit down at my computer
in the morning. We'll click on execute
step, and we can see it executed
properly. So, let's go back to our
canvas by clicking the top left link
here. And we can see we've got our
schedule trigger to schedule every
morning at 7:00 a.m. Next up, we want to
give it a set of sources to pull the
news from. So, we'll add our next step.
I'll click the plus here. We'll click
into data transformation and then we'll
use edit fields which also is a way to
set fields. So we'll select this one.
Now this step might get a little
confusing but if you follow along you'll
be just fine. Under edit fields here
when we get this new screen we're going
to click add field. And then for name
we'll just call it RSS. These are going
to be the different RSS feeds where we
pull news from. And then instead of
string we're going to give it an array
cuz we're going to give it a list of
various URLs to pull news from. Then
under value, I'm going to click this
little button to make it bigger so I can
actually type a little bit easier. And
we're going to enter just some very,
very simple JSON. I'm just going to put
this open bracket here. Go down a line.
I'm going to put a quote. And then our
first URL that we want it to pull from
is going to go inside of the first set
of quotes. Now, we need to find the RSS
feed from websites. This is a feed where
the websites automatically send this
news out to other websites that
aggregate this. So, let's say I want to
find it for TechCrunch. If I go to
techcrunch.com,
we need to find the RSS feed. And
usually it's just a matter of adding
like rss.xml
to the end of the URL. If that doesn't
work, then sometimes you just need to
add feed to the end of the URL. And in
this case, we found the RSS feed for
TechCrunch. I could grab this URL here,
copy it, jump back to NADN, enter this
as our first URL, and then we're going
to go ahead and close off the quotations
and put a comma. And then we're going to
do it for our next URL. This time, let's
go to ingadget.com.
And I believe this one might use/rs.xml.
And here's our RSS feed for this one.
So, I'll copy this feed here. We'll plug
it in, close our quotation, put a comma,
and then we'll add some more. So, I
added a couple more. Keep in mind, this
last URL does not need a comma at the
end. We just need to put another line
break, and then close off our brackets
here. And this is our simple little list
of URLs that it's going to pull our RSS
feeds from. We could go ahead and close
out of this. Click execute step. And we
can see our output shows our four URLs.
So we know this step is working. Let's
go back to our canvas. And now we can
see our first two steps. But now we
wanted to look at each of those feeds
individually. So we wanted to go through
one feed at a time and find the news
from each of them. So we'll actually go
ahead and split out each URL one by one.
I can add a plus here. We'll click on
data transformation again. And under
here, we can see an option to split out.
So, we'll select split out fields to
split out. We'll select the RSS field
here. We'll just drag and drop it right
there. And now it knows it's splitting
out the RSS field. We'll click on
execute step. And you can see it broke
out each of these four fields into
separate fields. Now, we need it to read
the RSS feed. So, I don't know exactly
where the RSS node is in these
subfolders here. So, I'm just going to
search RSS here. And you can see we've
got RSS read. So, we'll go ahead and
select RSS read. So, it reads that feed
there. And then under URL, we're going
to pull over this RSS that came out of
the split out. So, if I grab this, drag
it in, you'll see it added our little
code here for JSON. RSS. So, it's going
to read the feeds of every URL that we
gave in the step two steps ago. We'll
click execute step to see what happens.
This one's going to take a moment
because it's actually reading through
all of those feeds. And a few seconds
later, we can see it output 130 items
here. 13 pages of 10 pieces of news per
page. And we can see exactly what
information it's pulling from the RSS
feed. We can see who created it. We can
see the title of the article, the URL,
the publication date, the exact content,
the content snippet, the categories or
tags associated with the post. So, lots
and lots of information that we can now
pull from those various feeds. So, let's
go back to our canvas. And the next
thing I want to do is I want to take all
of that news, all 130 articles it just
found and put it all into just one
single writeup and we're going to have
AI summarize all that for us. So, it's
going to take all of that information.
I'm going to click plus here and I'm
going to do a quick search for aggregate
and we'll use the aggregate node. And
then we'll leave this set as individual
fields. But for our input field name,
let's pull the content snippet. The
content snippet is just this sort of
like one to two sentence summary of what
that news article is about. So ideally,
there's enough in there for us to work
with that information. So we'll go ahead
and grab content snippet, pull that into
our input field name here. We'll click
execute this step. And now look at this.
We have one giant piece of content here
that I can just scroll forever and ever
and ever. and it's got all of those news
snippets from all of those articles that
we just came across, about 130 of them.
Here's where it gets really fun. Now,
we're going to pull AI into the mix. So
far, this has just been sort of scraping
data from around the internet for us.
But now, we want to clean it up and give
us just what we care about. So, we'll go
back to our canvas. We'll click on plus.
And this time, we're going to click into
the AI box, and we're going to select AI
agent. Once we're in the AI agent, we're
going to set up a few settings here.
Under source for prompt, we're going to
set define below because we're not
actually entering any sort of text
prompt on a daily basis. We want it to
use the same prompt every time. For our
prompt here, I'm just going to type
summarize news because we're going to
actually put most of the details that we
want into the system message. So, I'm
going to select add option here. We'll
select system message. And this is where
we enter a more detailed prompt for it
to work with. So, let's give it a prompt
like only grab the news from the past 24
hours. act as a tech news aggregator and
write in plain easy to understand
English with no tech jargon. Here is the
list of news. And then down below that I
can pull in our aggregated content
snippets. So you can see here's all of
the snippets that it pulled in, but I
don't want it to pull it in in that
format. I want it to pull in all of the
content snippets. So if I minimize this
and just tell it to pull in all of the
content snippets, you can see it pulls
in just that JSON there and it'll assign
it with this prompt. So, it'll tell it
to only grab the news from the past 24
hours. Here's a list of news. And then
it'll pull in all of that content that
it just scraped from all of those
websites. Now, if I want to see what
this prompt actually looks like, I can
click on this little box down here to
expand our system message. We can see
our system message here, but we can also
see the result that it gave. So, here's
our prompt. Here's the list of news. And
then here is that dump of all of the
news here. We'll close out of this. and
it won't work yet because it says a chat
model sub node must be connected. So we
need to connect this to a large language
model to actually have it use this
prompt that we gave it. So down on the
bottom if I click on add chat model down
here we could select any model we want
for this. We'll keep it simple. Let's go
ahead and use an openai chat model. And
we will have to share an API key. So
I'll go ahead and create new credential.
And it's going to ask for my API key
from OpenAI. Now in order to get this
head on over to platform.openAI
openai.com. Click on dashboard in the
top of the screen and then on the left,
click on API keys and create a new
secret key. I'm going to call this one
N8N. It's going to create a secret key
that I can go ahead and copy here. Now,
when I jump back to N8N, I can paste in
my API key right here. Now, simply save
and we're connected to AI. Now, let's go
ahead and pick a model. And you can pick
from any of the OpenAI models that are
here. Let's go ahead and use GPT5. Now,
if I go back to my canvas here, double
click into our AI agent and execute this
step, we'll actually see what the output
will look like now. And we can see this
is the output that it gives us. So, it
took all of this content that we can see
on the left, tons and tons and tons of
content, and turned it into this. The
problem is this won't look very friendly
in my email. This is going to look
exactly like we're seeing it now when I
send it over to email because it's using
a lot of like markdown language and
email reads and HTML. So, let's go back
to our canvas and let's go ahead and
tweak the formatting so it's something
we can read in our email inbox without
making our heads explode. So, I'll click
the plus here and we want to convert
markdown to HTML. So, I'm going to go
ahead and search for markdown and we can
see we've got convert data between
markdown and HTML. Exactly what we're
looking for. We need to switch this mode
from HTML to markdown to markdown to
HTML because we're starting with
markdown. The markdown that we're going
to be converting is this output. So all
I have to do is click output right here
and drag it into markdown. Let's execute
the step to make sure it's working. And
check that out. Now we've got it in
HTML. Here's a quick summary of the top
tech news from the past 24 hours. All
broken up into HTML. Now we just need it
to email us. So we'll add our final step
here. And I'm going to do a quick search
for email. And then we'll go ahead and
select Gmail as the option. And then for
actions, we will send a message. Now,
quite honestly, this is probably the
most involved part of this whole process
is actually getting your Gmail account
set up inside of NADN. Up here where it
says credential to connect with, we need
to create a new credential to connect it
to Google. So, I'll click create new
credential. But then it asks for our
oath redirect URL, client ID, client
secret, all of this kind of stuff. And
well, we got to find all of that
information. And there's a handful of
steps you need to follow. Luckily, if I
click on open docs here, we can see we
have explanations on exactly how to set
this up. So once we're on this screen,
we pretty much just need to follow these
steps. We need to create a Google Cloud
Console project, enable APIs, configure
OOTH consent screen, create a Google
Oath client credentials, and finish the
N8N credential. And again, this will
probably take you up five or 6 minutes
to go through all these steps, but if
you follow these steps exactly, you will
get the credentials. Now, during this
process, there's one step that might
trip people up, and that's the step
where it asks you to add an authorized
domain. When you get to this step, click
on add domain. And then for the
authorized domain, if you are hosting it
over on Hostinger, the authorized domain
is going to be this domain here. So,
we'll go ahead and copy that and we'll
paste this into our authorized domain.
Again, if you follow all the steps on
the documentation page, you should get
set up fairly easily. Now, we simply
just need to dial in the email that it's
going to send. So, we're connected to
our Gmail account that we just set up.
We'll leave the resources message
operation we'll leave as send. And well,
I want this to email me every day. So,
let's go ahead and put in matt@
futuretools.io.
For our subject, we'll call it daily
tech digest. Email type we'll leave as
HTML. And then for our message, you can
see we've got our original, which is in
markdown. And then we've got our data
here, which is in HTML. We wanted to
pull it in in HTML. So, let's go ahead
and grab this box, pull it into our
message. Now, if I click execute step,
you can see that it says it sent the
email. Now, it doesn't show the output
of the email because this step is just
sending an email. So, the output is
email was sent. But if I go check my
inbox, you can see I just got an email
from well myself that says daily tech
digest. If I click on this, here's the
email perfectly formatted in everything.
Here's a quick summary of the top tech
news from the past 24 hours. AI and
regulation, big tech and legal, various
gadgets, new devices and updates,
startups and ventures, cyber security.
Now, I didn't dial this in just to be
AI. This is all tech news. But I just
built an entire automation where every
single morning at 7 a.m. It's going to
send me a tech digest of the last 24
hours. And again, this is just
scratching the surface of what's
possible with NADN. If we wanted, we can
have this tech digest sent directly to
our Slack channel or emailed to an
entire newsletter through Mailchimp or
ConvertKit. The possibility for
automations and agents that you can
build with this thing is just insane.
There is so much you can do, but to give
the quick wrap-up of everything that's
happening in this automation. So, we
start with a trigger. This trigger fires
off every day at 7 a.m. It looks at
these news resources here that we
plugged into our little mini JSON. It
splits those URLs out so that it can
look at it individually. It then looks
at the RSS feed of every single one of
those URLs that we gave it. Aggregates
it all into one giant message. That one
giant message goes into our AI agent
with a prompt to chat GPT which
summarizes just the important news from
the last 24 hours. The output that it
gives us is then converted from markdown
into HTML so it reads better as an
email. And then finally it's sent to us
in Gmail as a daily digest and this will
run every single morning at 7 a.m.
Really, really powerful workflows that
you can build. Again, just scratching
the surface. This is designed to get
your wheels turning about what's
possible with N8N. And honestly, the
easiest and best way to get it set up
and running in a secure, safe, always on
way is to build it using Hostinger. So,
thanks again to Hostinger for sponsoring
this video. You can go directly to their
Natnation
page by going to hostinger.com/mattnatn.
And then when you're checking out, don't
forget to use the coupon code mattwolf
to get an extra 10% off. And also, if
you want to read a newsletter about AI
that's still curated and written by a
human, make sure you check out
futuretools.io and join that newsletter.
I send an email every Wednesday and
Friday with the latest AI news and
tools. And well, yeah, that one actually
is still written by a human. You can
find that over at futuretools.io.
And one final thing before I wrap up,
just a little bit of housekeeping. I am
giving away an iPhone 17. I just got one
myself. The camera on this thing is
absolutely insane and you can get one
for free. Super easy to do. All you have
to do is go follow me on Instagram and I
have a post mentioning the iPhone
giveaway. Follow me on Instagram,
comment on that post, and you're entered
to win. I'm really trying to grow my
Instagram account right now and I want
to grow it so badly that I'm willing to
give away iPhones to try to do it. So,
head on over to my Instagram, follow me,
and comment on the post about the iPhone
and you'll get entered to win as well.
Thank you so much again to Hostinger for
sponsoring this one. I am so blown away
by what you can do with NADN and these
various AI agent builders that are out
there. I know my wheels are really
really turning about the types of
automations you can build with this
stuff and hopefully yours are too.
Thanks again for tuning in, hanging out,
nerding out with me. Really, really
appreciate you. Hopefully I'll see you
in the next one. Bye-bye. Thank you so
much for nerding out with me today. If
you like videos like this, make sure to
give it a thumbs up and subscribe to
this channel. I'll make sure more videos
like this show up in your YouTube feed.
And if you haven't already, check out
futuretools.io where I share all the
coolest AI tools and all the latest AI
news. And there's an awesome free
newsletter. Thanks again. Really
appreciate you. See you in the next one.